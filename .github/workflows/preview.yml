name: Preview

on: [pull_request]

jobs:
  preview:
    runs-on: self-hosted
    env:
      HUGO_VERSION: 0.62.1
      PREVIEW_HOST: dot-cube.github.io.preview.moyashi.dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Check environment
        run: |
          ISSUE_NUMBER=$(jq --raw-output .pull_request.number "${GITHUB_EVENT_PATH}")
          echo "ISSUE_NUMBER=${ISSUE_NUMBER}" >> $GITHUB_ENV
          echo "HUGO_PATH=`which hugo`" >> $GITHUB_ENV

      - name: Setup Hugo
        if: ${{ env.HUGO_PATH == '' }}
        run: |
          apt-get update
          apt-get -y install golang
          cd `mktemp -d`
          wget https://github.com/gohugoio/hugo/archive/refs/tags/v${HUGO_VERSION}.tar.gz
          tar -zxvf v${HUGO_VERSION}.tar.gz
          cd hugo-${HUGO_VERSION}
          CGO_ENABLED=1 go install --tags extended
          CGO_ENABLED=1 go build --tags extended
          mv hugo /usr/bin/hugo
          rm -rf `pwd`

      - name: Configure
        run: |
          sed -i -E "s/^baseURL ?=.+$/baseURL = '\/${ISSUE_NUMBER}\/${GITHUB_SHA}'/g" ./config.toml
          sed -i -E "s/^google_analitycs_id ?=.+$/google_analitycs_id = ''/g" ./config.toml

      - name: Build and deploy
        run: |
          echo ${GITHUB_SHA}
          hugo --gc --minify --cleanDestinationDir
          BASE_DIR="/var/www/html/${ISSUE_NUMBER}"
          mkdir -p  ${BASE_DIR}
          mv public ${BASE_DIR}/${GITHUB_SHA}
          PREVIEW_URL="https://${PREVIEW_HOST}/${ISSUE_NUMBER}/${GITHUB_SHA}"

          echo ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/issues/${ISSUE_NUMBER}/comments
          echo ${PREVIEW_URL}

          curl \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' \
            -H "User-Agent: dot-cube" \
            ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/issues/${ISSUE_NUMBER}/comments \
            -d "{\"body\":\"${PREVIEW_URL}\"}" \
            -w '%{http_code}\n' -v --fail
